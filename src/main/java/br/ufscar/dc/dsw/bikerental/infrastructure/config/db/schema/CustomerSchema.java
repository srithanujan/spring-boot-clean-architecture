package br.ufscar.dc.dsw.bikerental.infrastructure.config.db.schema;

import br.ufscar.dc.dsw.bikerental.entity.customer.model.Customer;
import br.ufscar.dc.dsw.bikerental.entity.customer.model.Sex;
import br.ufscar.dc.dsw.bikerental.infrastructure.customer.validation.formats.CPF;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDate;
import java.util.List;

@Entity
@Table(name = "Customer")
public class CustomerSchema extends UserSchema {

//  @UniqueCPF(message = "{Unique.customer.CPF}")
  @NotBlank
  @CPF(message = "{Size.customer.CPF}")
  @Column(unique = true)
  private String cpf;

  @NotBlank
//  @PhoneNumber(message = "{Size.customer.phone}")
  private String phoneNumber;

  @NotNull
  @Enumerated(EnumType.STRING)
  private Sex sex;

//  @BirthDate(message = "{BirthDate.customer}")
  @Column(columnDefinition = "Date")
  private LocalDate birthdate;

  @OneToMany(cascade = CascadeType.REMOVE, mappedBy = "customer")
  private List<RentalSchema> rentals;

  public CustomerSchema() {
    this.role = "ROLE_CUSTOMER";
  }


  public CustomerSchema(Customer customer) {
    super(customer.getId(), customer.getUsername(), customer.getName(), customer.getEmail(), customer.getPassword());
    this.cpf = customer.getCpf();
    this.phoneNumber = customer.getPhoneNumber();
    this.sex = customer.getSex();
    this.birthdate = customer.getBirthdate();

    this.role = "ROLE_CUSTOMER";
  }

  public String getCpf() {
    return cpf;
  }

  public void setCpf(String cpf) {
    this.cpf = cpf;
  }

  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Sex getSex() {
    return sex;
  }

  public void setSex(Sex sex) {
    this.sex = sex;
  }

  public LocalDate getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(LocalDate birthdate) {
    this.birthdate = birthdate;
  }

  public List<RentalSchema> getRentals() {
    return rentals;
  }

  public void setRentals(List<RentalSchema> rentals) {
    this.rentals = rentals;
  }

  public Customer toCustomer() {
    Customer customer = new Customer(
            this.getUsername(),
            this.getPassword(),
            this.getName(),
            this.getEmail(),
            this.cpf,
            this.phoneNumber,
            this.sex,
            this.birthdate
    );
    customer.setId(this.getId()); // transform the schema id (generated by database) to entity customer id
    return customer;
  }
}
